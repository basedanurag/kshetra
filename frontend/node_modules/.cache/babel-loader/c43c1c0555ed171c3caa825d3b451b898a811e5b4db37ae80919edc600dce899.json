{"ast":null,"code":"export class Observable {\n  constructor() {\n    this.observers = [];\n  }\n  subscribe(func) {\n    this.observers.push(func);\n  }\n  unsubscribe(func) {\n    this.observers = this.observers.filter(observer => observer !== func);\n  }\n  notify(data, ...rest) {\n    this.observers.forEach(observer => observer(data, ...rest));\n  }\n}\nexport class ObservableLog extends Observable {\n  constructor() {\n    super();\n  }\n  print(message, ...rest) {\n    this.notify({\n      message,\n      level: 'info'\n    }, ...rest);\n  }\n  warn(message, ...rest) {\n    this.notify({\n      message,\n      level: 'warn'\n    }, ...rest);\n  }\n  error(message, error, ...rest) {\n    this.notify({\n      message,\n      level: 'error',\n      error\n    }, ...rest);\n  }\n}","map":{"version":3,"names":["Observable","constructor","observers","subscribe","func","push","unsubscribe","filter","observer","notify","data","rest","forEach","ObservableLog","print","message","level","warn","error"],"sources":["D:\\Kshetra\\frontend\\node_modules\\@dfinity\\agent\\src\\observable.ts"],"sourcesContent":["import { AgentError } from './errors.ts';\n\nexport type ObserveFunction<T> = (data: T, ...rest: unknown[]) => void;\n\nexport class Observable<T> {\n  observers: ObserveFunction<T>[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  subscribe(func: ObserveFunction<T>) {\n    this.observers.push(func);\n  }\n\n  unsubscribe(func: ObserveFunction<T>) {\n    this.observers = this.observers.filter(observer => observer !== func);\n  }\n\n  notify(data: T, ...rest: unknown[]) {\n    this.observers.forEach(observer => observer(data, ...rest));\n  }\n}\n\nexport type AgentLog =\n  | {\n      message: string;\n      level: 'warn' | 'info';\n    }\n  | {\n      message: string;\n      level: 'error';\n      error: AgentError;\n    };\n\nexport class ObservableLog extends Observable<AgentLog> {\n  constructor() {\n    super();\n  }\n  print(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'info' }, ...rest);\n  }\n  warn(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'warn' }, ...rest);\n  }\n  error(message: string, error: AgentError, ...rest: unknown[]) {\n    this.notify({ message, level: 'error', error }, ...rest);\n  }\n}\n"],"mappings":"AAIA,OAAM,MAAOA,UAAU;EAGrBC,YAAA;IACE,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,SAASA,CAACC,IAAwB;IAChC,IAAI,CAACF,SAAS,CAACG,IAAI,CAACD,IAAI,CAAC;EAC3B;EAEAE,WAAWA,CAACF,IAAwB;IAClC,IAAI,CAACF,SAAS,GAAG,IAAI,CAACA,SAAS,CAACK,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAKJ,IAAI,CAAC;EACvE;EAEAK,MAAMA,CAACC,IAAO,EAAE,GAAGC,IAAe;IAChC,IAAI,CAACT,SAAS,CAACU,OAAO,CAACJ,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE,GAAGC,IAAI,CAAC,CAAC;EAC7D;;AAcF,OAAM,MAAOE,aAAc,SAAQb,UAAoB;EACrDC,YAAA;IACE,KAAK,EAAE;EACT;EACAa,KAAKA,CAACC,OAAe,EAAE,GAAGJ,IAAe;IACvC,IAAI,CAACF,MAAM,CAAC;MAAEM,OAAO;MAAEC,KAAK,EAAE;IAAM,CAAE,EAAE,GAAGL,IAAI,CAAC;EAClD;EACAM,IAAIA,CAACF,OAAe,EAAE,GAAGJ,IAAe;IACtC,IAAI,CAACF,MAAM,CAAC;MAAEM,OAAO;MAAEC,KAAK,EAAE;IAAM,CAAE,EAAE,GAAGL,IAAI,CAAC;EAClD;EACAO,KAAKA,CAACH,OAAe,EAAEG,KAAiB,EAAE,GAAGP,IAAe;IAC1D,IAAI,CAACF,MAAM,CAAC;MAAEM,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEE;IAAK,CAAE,EAAE,GAAGP,IAAI,CAAC;EAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}