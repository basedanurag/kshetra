{"ast":null,"code":"import { bls12_381 } from '@noble/curves/bls12-381';\nimport { bytesToHex } from '@noble/hashes/utils';\nexport let verify;\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk, sig, msg) {\n  const primaryKey = typeof pk === 'string' ? pk : bytesToHex(pk);\n  const signature = typeof sig === 'string' ? sig : bytesToHex(sig);\n  const message = typeof msg === 'string' ? msg : bytesToHex(msg);\n  return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}","map":{"version":3,"names":["bls12_381","bytesToHex","verify","blsVerify","pk","sig","msg","primaryKey","signature","message","verifyShortSignature"],"sources":["D:\\Kshetra\\frontend\\node_modules\\@dfinity\\agent\\src\\utils\\bls.ts"],"sourcesContent":["import { bls12_381 } from '@noble/curves/bls12-381';\nimport { bytesToHex } from '@noble/hashes/utils';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk: Uint8Array, sig: Uint8Array, msg: Uint8Array): boolean {\n  const primaryKey = typeof pk === 'string' ? pk : bytesToHex(pk);\n  const signature = typeof sig === 'string' ? sig : bytesToHex(sig);\n  const message = typeof msg === 'string' ? msg : bytesToHex(msg);\n  return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAO,IAAIC,MAAqE;AAEhF;;;;;;;AAOA,OAAM,SAAUC,SAASA,CAACC,EAAc,EAAEC,GAAe,EAAEC,GAAe;EACxE,MAAMC,UAAU,GAAG,OAAOH,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGH,UAAU,CAACG,EAAE,CAAC;EAC/D,MAAMI,SAAS,GAAG,OAAOH,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGJ,UAAU,CAACI,GAAG,CAAC;EACjE,MAAMI,OAAO,GAAG,OAAOH,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGL,UAAU,CAACK,GAAG,CAAC;EAC/D,OAAON,SAAS,CAACU,oBAAoB,CAACF,SAAS,EAAEC,OAAO,EAAEF,UAAU,CAAC;AACvE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}