{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as IDL from \"./idl.js\";\nimport { Principal } from '@dfinity/principal';\nimport * as UI from \"./candid-core.js\";\nconst InputConfig = {\n  parse: parsePrimitive\n};\nconst FormConfig = {\n  render: renderInput\n};\nexport const inputBox = (t, config) => {\n  return new UI.InputBox(t, {\n    ...InputConfig,\n    ...config\n  });\n};\nexport const recordForm = (fields, config) => {\n  return new UI.RecordForm(fields, {\n    ...FormConfig,\n    ...config\n  });\n};\nexport const tupleForm = (components, config) => {\n  return new UI.TupleForm(components, {\n    ...FormConfig,\n    ...config\n  });\n};\nexport const variantForm = (fields, config) => {\n  return new UI.VariantForm(fields, {\n    ...FormConfig,\n    ...config\n  });\n};\nexport const optForm = (ty, config) => {\n  return new UI.OptionForm(ty, {\n    ...FormConfig,\n    ...config\n  });\n};\nexport const vecForm = (ty, config) => {\n  return new UI.VecForm(ty, {\n    ...FormConfig,\n    ...config\n  });\n};\nexport class Render extends IDL.Visitor {\n  visitType(t, _d) {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, {\n      input\n    });\n  }\n  visitNull(t, _d) {\n    return inputBox(t, {});\n  }\n  visitRecord(t, fields, _d) {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitTuple(t, components, _d) {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitVariant(t, fields, _d) {\n    const select = document.createElement('select');\n    for (const [key, _type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config = {\n      open: select,\n      event: 'change'\n    };\n    const form = variantForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitOpt(t, ty, _d) {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, {\n      open: checkbox,\n      event: 'change'\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n  visitVec(t, ty, _d) {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, {\n      open: len,\n      event: 'change',\n      container\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n  visitRec(_t, ty, _d) {\n    return renderInput(ty);\n  }\n}\nclass Parse extends IDL.Visitor {\n  visitNull(_t, _v) {\n    return null;\n  }\n  visitBool(_t, v) {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  visitText(_t, v) {\n    return v;\n  }\n  visitFloat(_t, v) {\n    return parseFloat(v);\n  }\n  visitFixedInt(t, v) {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitFixedNat(t, v) {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitNumber(_t, v) {\n    return BigInt(v);\n  }\n  visitPrincipal(_t, v) {\n    return Principal.fromText(v);\n  }\n  visitService(_t, v) {\n    return Principal.fromText(v);\n  }\n  visitFunc(_t, v) {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\nclass Random extends IDL.Visitor {\n  visitNull(_t, _v) {\n    return null;\n  }\n  visitBool(_t, _v) {\n    return Math.random() < 0.5;\n  }\n  visitText(_t, _v) {\n    return Math.random().toString(36).substring(6);\n  }\n  visitFloat(_t, _v) {\n    return Math.random();\n  }\n  visitInt(_t, _v) {\n    return BigInt(this.generateNumber(true));\n  }\n  visitNat(_t, _v) {\n    return BigInt(this.generateNumber(false));\n  }\n  visitFixedInt(t, v) {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitFixedNat(t, v) {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  generateNumber(signed) {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\nfunction parsePrimitive(t, config, d) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t) {\n  return t.accept(new Render(), null);\n}\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t, input, value) {\n  return t.accept(new RenderValue(), {\n    input,\n    value\n  });\n}\nclass RenderValue extends IDL.Visitor {\n  visitType(t, d) {\n    d.input.ui.input.value = t.valueToString(d.value);\n  }\n  visitNull(_t, _d) {}\n  visitText(_t, d) {\n    d.input.ui.input.value = d.value;\n  }\n  visitRec(_t, ty, d) {\n    renderValue(ty, d.input, d.value);\n  }\n  visitOpt(_t, ty, d) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form;\n      const open = form.ui.open;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  visitRecord(_t, fields, d) {\n    const form = d.input.ui.form;\n    fields.forEach((_ref, i) => {\n      let [key, type] = _ref;\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  visitTuple(_t, components, d) {\n    const form = d.input.ui.form;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  visitVariant(_t, fields, d) {\n    const form = d.input.ui.form;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach((_ref2, i) => {\n      let [key, type] = _ref2;\n      if (key === selected[0]) {\n        const open = form.ui.open;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  visitVec(_t, ty, d) {\n    const form = d.input.ui.form;\n    const len = d.value.length;\n    const open = form.ui.open;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event));\n    d.value.forEach((v, i) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}","map":{"version":3,"names":["IDL","Principal","UI","InputConfig","parse","parsePrimitive","FormConfig","render","renderInput","inputBox","t","config","InputBox","recordForm","fields","RecordForm","tupleForm","components","TupleForm","variantForm","VariantForm","optForm","ty","OptionForm","vecForm","VecForm","Render","Visitor","visitType","_d","input","document","createElement","classList","add","placeholder","display","visitNull","visitRecord","length","container","form","visitTuple","visitVariant","select","key","_type","option","Option","selectedIndex","open","event","visitOpt","checkbox","type","visitVec","len","min","max","style","width","visitRec","_t","Parse","_v","visitBool","v","Error","visitText","visitFloat","parseFloat","visitFixedInt","_bits","parseInt","BigInt","visitFixedNat","visitNumber","visitPrincipal","fromText","visitService","visitFunc","x","split","Random","Math","random","toString","substring","visitInt","generateNumber","visitNat","signed","num","floor","d","accept","renderValue","value","RenderValue","ui","valueToString","checked","dispatchEvent","Event","forEach","_ref","i","selected","Object","entries","_ref2"],"sources":["D:\\Kshetra\\frontend\\node_modules\\@dfinity\\candid\\src\\candid-ui.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as IDL from './idl.ts';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core.ts';\n\ntype InputBox = UI.InputBox;\n\nconst InputConfig: UI.UIConfig = { parse: parsePrimitive };\nconst FormConfig: UI.FormConfig = { render: renderInput };\n\nexport const inputBox = (t: IDL.Type, config: Partial<UI.UIConfig>) => {\n  return new UI.InputBox(t, { ...InputConfig, ...config });\n};\nexport const recordForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.RecordForm(fields, { ...FormConfig, ...config });\n};\nexport const tupleForm = (components: IDL.Type[], config: Partial<UI.FormConfig>) => {\n  return new UI.TupleForm(components, { ...FormConfig, ...config });\n};\nexport const variantForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.VariantForm(fields, { ...FormConfig, ...config });\n};\nexport const optForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.OptionForm(ty, { ...FormConfig, ...config });\n};\nexport const vecForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.VecForm(ty, { ...FormConfig, ...config });\n};\n\nexport class Render extends IDL.Visitor<null, InputBox> {\n  public visitType<T>(t: IDL.Type<T>, _d: null): InputBox {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, { input });\n  }\n  public visitNull(t: IDL.NullClass, _d: null): InputBox {\n    return inputBox(t, {});\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, _d: null): InputBox {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t as IDL.Type<any>, { form });\n  }\n  public visitTuple<T extends any[]>(\n    t: IDL.TupleClass<T>,\n    components: IDL.Type[],\n    _d: null,\n  ): InputBox {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t as IDL.Type<any>, { form });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, _d: null): InputBox {\n    const select = document.createElement('select');\n    for (const [key, _type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config: Partial<UI.FormConfig> = { open: select, event: 'change' };\n    const form = variantForm(fields, config);\n    return inputBox(t as IDL.Type<any>, { form });\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, _d: null): InputBox {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, { open: checkbox, event: 'change' });\n    return inputBox(t as IDL.Type<any>, { form });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, _d: null): InputBox {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, { open: len, event: 'change', container });\n    return inputBox(t, { form });\n  }\n  public visitRec<T>(_t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, _d: null): InputBox {\n    return renderInput(ty);\n  }\n}\n\nclass Parse extends IDL.Visitor<string, any> {\n  public visitNull(_t: IDL.NullClass, _v: string): null {\n    return null;\n  }\n  public visitBool(_t: IDL.BoolClass, v: string): boolean {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  public visitText(_t: IDL.TextClass, v: string): string {\n    return v;\n  }\n  public visitFloat(_t: IDL.FloatClass, v: string): number {\n    return parseFloat(v);\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitNumber(_t: IDL.PrimitiveType, v: string): bigint {\n    return BigInt(v);\n  }\n  public visitPrincipal(_t: IDL.PrincipalClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitService(_t: IDL.ServiceClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitFunc(_t: IDL.FuncClass, v: string): [Principal, string] {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\n\nclass Random extends IDL.Visitor<string, any> {\n  public visitNull(_t: IDL.NullClass, _v: string): null {\n    return null;\n  }\n  public visitBool(_t: IDL.BoolClass, _v: string): boolean {\n    return Math.random() < 0.5;\n  }\n  public visitText(_t: IDL.TextClass, _v: string): string {\n    return Math.random().toString(36).substring(6);\n  }\n  public visitFloat(_t: IDL.FloatClass, _v: string): number {\n    return Math.random();\n  }\n  public visitInt(_t: IDL.IntClass, _v: string): bigint {\n    return BigInt(this.generateNumber(true));\n  }\n  public visitNat(_t: IDL.NatClass, _v: string): bigint {\n    return BigInt(this.generateNumber(false));\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  private generateNumber(signed: boolean): number {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\n\nfunction parsePrimitive(t: IDL.Type, config: UI.ParseConfig, d: string) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t: IDL.Type): InputBox {\n  return t.accept(new Render(), null);\n}\n\ninterface ValueConfig {\n  input: InputBox;\n  value: any;\n}\n\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t: IDL.Type, input: InputBox, value: any) {\n  return t.accept(new RenderValue(), { input, value });\n}\n\nclass RenderValue extends IDL.Visitor<ValueConfig, void> {\n  public visitType<T>(t: IDL.Type<T>, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = t.valueToString(d.value);\n  }\n\n  public visitNull(_t: IDL.NullClass, _d: ValueConfig) {}\n  public visitText(_t: IDL.TextClass, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = d.value;\n  }\n  public visitRec<T>(_t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: ValueConfig): void {\n    renderValue(ty, d.input, d.value);\n  }\n  public visitOpt<T>(_t: IDL.OptClass<T>, ty: IDL.Type<T>, d: ValueConfig): void {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form!;\n      const open = form.ui.open as HTMLInputElement;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event!));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  public visitRecord(_t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    fields.forEach(([key, type], i) => {\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  public visitTuple<T extends any[]>(\n    _t: IDL.TupleClass<T>,\n    components: IDL.Type[],\n    d: ValueConfig,\n  ) {\n    const form = d.input.ui.form!;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  public visitVariant(_t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach(([key, type], i) => {\n      if (key === selected[0]) {\n        const open = form.ui.open as HTMLSelectElement;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event!));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  public visitVec<T>(_t: IDL.VecClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const len = d.value.length;\n    const open = form.ui.open as HTMLInputElement;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event!));\n    d.value.forEach((v: T, i: number) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}