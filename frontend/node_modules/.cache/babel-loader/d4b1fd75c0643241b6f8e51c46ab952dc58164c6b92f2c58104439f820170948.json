{"ast":null,"code":"import { ED25519_OID, unwrapDER, wrapDER } from \"./der.js\";\nimport { DerDecodeErrorCode, InputError } from \"./errors.js\";\nexport class Ed25519PublicKey {\n  static from(key) {\n    return this.fromDer(key.toDer());\n  }\n  static fromRaw(rawKey) {\n    return new Ed25519PublicKey(rawKey);\n  }\n  static fromDer(derKey) {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n  // The length of Ed25519 public keys is always 32 bytes.\n  static #_ = (() => this.RAW_KEY_LENGTH = 32)();\n  static derEncode(publicKey) {\n    return wrapDER(publicKey, ED25519_OID);\n  }\n  static derDecode(key) {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw InputError.fromCode(new DerDecodeErrorCode('An Ed25519 public key must be exactly 32 bytes long'));\n    }\n    return unwrapped;\n  }\n  #rawKey;\n  get rawKey() {\n    return this.#rawKey;\n  }\n  #derKey;\n  get derKey() {\n    return this.#derKey;\n  }\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  constructor(key) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw InputError.fromCode(new DerDecodeErrorCode('An Ed25519 public key must be exactly 32 bytes long'));\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n  toDer() {\n    return this.derKey;\n  }\n  toRaw() {\n    return this.rawKey;\n  }\n}","map":{"version":3,"names":["ED25519_OID","unwrapDER","wrapDER","DerDecodeErrorCode","InputError","Ed25519PublicKey","from","key","fromDer","toDer","fromRaw","rawKey","derKey","derDecode","_","RAW_KEY_LENGTH","derEncode","publicKey","unwrapped","length","fromCode","constructor","byteLength","toRaw"],"sources":["D:\\Kshetra\\frontend\\node_modules\\@dfinity\\agent\\src\\public_key.ts"],"sourcesContent":["import { type DerEncodedPublicKey, type PublicKey } from './auth.ts';\nimport { ED25519_OID, unwrapDER, wrapDER } from './der.ts';\nimport { DerDecodeErrorCode, InputError } from './errors.ts';\n\nexport class Ed25519PublicKey implements PublicKey {\n  public static from(key: PublicKey): Ed25519PublicKey {\n    return this.fromDer(key.toDer());\n  }\n\n  public static fromRaw(rawKey: Uint8Array): Ed25519PublicKey {\n    return new Ed25519PublicKey(rawKey);\n  }\n\n  public static fromDer(derKey: DerEncodedPublicKey): Ed25519PublicKey {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n\n  // The length of Ed25519 public keys is always 32 bytes.\n  private static RAW_KEY_LENGTH = 32;\n\n  private static derEncode(publicKey: Uint8Array): DerEncodedPublicKey {\n    return wrapDER(publicKey, ED25519_OID) as DerEncodedPublicKey;\n  }\n\n  private static derDecode(key: DerEncodedPublicKey): Uint8Array {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw InputError.fromCode(\n        new DerDecodeErrorCode('An Ed25519 public key must be exactly 32 bytes long'),\n      );\n    }\n    return unwrapped;\n  }\n\n  #rawKey: Uint8Array;\n\n  public get rawKey(): Uint8Array {\n    return this.#rawKey;\n  }\n\n  #derKey: DerEncodedPublicKey;\n\n  public get derKey(): DerEncodedPublicKey {\n    return this.#derKey;\n  }\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  private constructor(key: Uint8Array) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw InputError.fromCode(\n        new DerDecodeErrorCode('An Ed25519 public key must be exactly 32 bytes long'),\n      );\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this.derKey;\n  }\n\n  public toRaw(): Uint8Array {\n    return this.rawKey;\n  }\n}\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,UAAU;AAC1D,SAASC,kBAAkB,EAAEC,UAAU,QAAQ,aAAa;AAE5D,OAAM,MAAOC,gBAAgB;EACpB,OAAOC,IAAIA,CAACC,GAAc;IAC/B,OAAO,IAAI,CAACC,OAAO,CAACD,GAAG,CAACE,KAAK,EAAE,CAAC;EAClC;EAEO,OAAOC,OAAOA,CAACC,MAAkB;IACtC,OAAO,IAAIN,gBAAgB,CAACM,MAAM,CAAC;EACrC;EAEO,OAAOH,OAAOA,CAACI,MAA2B;IAC/C,OAAO,IAAIP,gBAAgB,CAAC,IAAI,CAACQ,SAAS,CAACD,MAAM,CAAC,CAAC;EACrD;EAEA;EAAA,QAAAE,CAAA,UACe,KAAAC,cAAc,GAAG,EAAE;EAE1B,OAAOC,SAASA,CAACC,SAAqB;IAC5C,OAAOf,OAAO,CAACe,SAAS,EAAEjB,WAAW,CAAwB;EAC/D;EAEQ,OAAOa,SAASA,CAACN,GAAwB;IAC/C,MAAMW,SAAS,GAAGjB,SAAS,CAACM,GAAG,EAAEP,WAAW,CAAC;IAC7C,IAAIkB,SAAS,CAACC,MAAM,KAAK,IAAI,CAACJ,cAAc,EAAE;MAC5C,MAAMX,UAAU,CAACgB,QAAQ,CACvB,IAAIjB,kBAAkB,CAAC,qDAAqD,CAAC,CAC9E;IACH;IACA,OAAOe,SAAS;EAClB;EAEA,CAAAP,MAAO;EAEP,IAAWA,MAAMA,CAAA;IACf,OAAO,IAAI,CAAC,CAAAA,MAAO;EACrB;EAEA,CAAAC,MAAO;EAEP,IAAWA,MAAMA,CAAA;IACf,OAAO,IAAI,CAAC,CAAAA,MAAO;EACrB;EAEA;EACAS,YAAoBd,GAAe;IACjC,IAAIA,GAAG,CAACe,UAAU,KAAKjB,gBAAgB,CAACU,cAAc,EAAE;MACtD,MAAMX,UAAU,CAACgB,QAAQ,CACvB,IAAIjB,kBAAkB,CAAC,qDAAqD,CAAC,CAC9E;IACH;IACA,IAAI,CAAC,CAAAQ,MAAO,GAAGJ,GAAG;IAClB,IAAI,CAAC,CAAAK,MAAO,GAAGP,gBAAgB,CAACW,SAAS,CAACT,GAAG,CAAC;EAChD;EAEOE,KAAKA,CAAA;IACV,OAAO,IAAI,CAACG,MAAM;EACpB;EAEOW,KAAKA,CAAA;IACV,OAAO,IAAI,CAACZ,MAAM;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}